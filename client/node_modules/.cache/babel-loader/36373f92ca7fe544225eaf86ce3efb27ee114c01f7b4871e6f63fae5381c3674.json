{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kovia\\\\Desktop\\\\clone insta 2\\\\insta-clone\\\\client\\\\src\\\\components\\\\screens\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [mypics, setPics] = useState([]); // State for storing user posts\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext); // Accessing global state and dispatch\n  const [image, setImage] = useState(\"\"); // State for storing selected image for profile update\n\n  useEffect(() => {\n    // Fetching user posts from the server\n    fetch('/mypost', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\") // Authorization with JWT token\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setPics(result.mypost); // Setting user posts in the state\n    });\n  }, []); // Empty dependency array to run this effect only once after initial render\n\n  useEffect(() => {\n    if (image) {\n      // If image is selected, prepare data for upload to Cloudinary\n      const data = new FormData();\n      data.append(\"file\", image); // Append selected file\n      data.append(\"upload_preset\", \"insta-clone\"); // Cloudinary upload preset\n      data.append(\"cloud_name\", \"cnq\"); // Cloudinary cloud name\n\n      // Upload the image to Cloudinary\n      fetch(\"https://api.cloudinary.com/v1_1/cnq/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        // Once uploaded, update the profile picture on the server\n        fetch('/updatepic', {\n          method: \"put\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n          },\n          body: JSON.stringify({\n            pic: data.url // Sending the Cloudinary URL for the new profile picture\n          })\n        }).then(res => res.json()).then(result => {\n          console.log(result);\n          // Update localStorage and global state with the new profile pic\n          localStorage.setItem(\"user\", JSON.stringify({\n            ...state,\n            pic: result.pic\n          }));\n          dispatch({\n            type: \"UPDATEPIC\",\n            payload: result.pic\n          }); // Dispatch to update user state\n        }).catch(err => {\n          console.log(\"Error updating profile pic:\", err);\n        });\n      }).catch(err => {\n        console.log(\"Error uploading photo:\", err);\n      });\n    }\n  }, [image, dispatch, state]); // Adding dispatch and state to the dependencies\n\n  const updatePhoto = file => {\n    setImage(file); // Update the image state when a new file is selected\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"550px\",\n      margin: \"0px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"18px 0px\",\n        borderBottom: \"1px solid grey\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"160px\",\n              height: \"160px\",\n              borderRadius: \"80px\"\n            },\n            src: state ? state.pic : \"loading\" // Display the user's profile pic or \"loading\" text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: state ? state.name : \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: state ? state.email : \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"108%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [mypics.length, \" posts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [state ? state.followers.length : \"0\", \" followers\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [state ? state.following.length : \"0\", \" following\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-field input-field\",\n        style: {\n          margin: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn #64b5f6 blue darken-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Update pic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => updatePhoto(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-path-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"file-path validate\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: mypics.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"item\",\n          src: item.photo,\n          alt: item.title\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"rHZQLNBMpN3f7lHuzj2Mel3JXZ4=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useContext","UserContext","jsxDEV","_jsxDEV","Profile","_s","mypics","setPics","state","dispatch","image","setImage","fetch","headers","localStorage","getItem","then","res","json","result","console","log","mypost","data","FormData","append","method","body","JSON","stringify","pic","url","setItem","type","payload","catch","err","updatePhoto","file","style","maxWidth","margin","children","borderBottom","display","justifyContent","width","height","borderRadius","src","fileName","_jsxFileName","lineNumber","columnNumber","name","email","length","followers","following","className","onChange","e","target","files","map","item","photo","alt","title","_id","_c","$RefreshReg$"],"sources":["C:/Users/kovia/Desktop/clone insta 2/insta-clone/client/src/components/screens/Profile.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from '../../App'\r\n\r\nconst Profile = () => {\r\n    const [mypics, setPics] = useState([])  // State for storing user posts\r\n    const { state, dispatch } = useContext(UserContext)  // Accessing global state and dispatch\r\n    const [image, setImage] = useState(\"\")  // State for storing selected image for profile update\r\n\r\n    useEffect(() => {\r\n        // Fetching user posts from the server\r\n        fetch('/mypost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")  // Authorization with JWT token\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(result)\r\n            setPics(result.mypost)  // Setting user posts in the state\r\n        })\r\n    }, [])  // Empty dependency array to run this effect only once after initial render\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            // If image is selected, prepare data for upload to Cloudinary\r\n            const data = new FormData()\r\n            data.append(\"file\", image)  // Append selected file\r\n            data.append(\"upload_preset\", \"insta-clone\")  // Cloudinary upload preset\r\n            data.append(\"cloud_name\", \"cnq\")  // Cloudinary cloud name\r\n\r\n            // Upload the image to Cloudinary\r\n            fetch(\"https://api.cloudinary.com/v1_1/cnq/image/upload\", {\r\n                method: \"post\",\r\n                body: data\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // Once uploaded, update the profile picture on the server\r\n                fetch('/updatepic', {\r\n                    method: \"put\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                    },\r\n                    body: JSON.stringify({\r\n                        pic: data.url  // Sending the Cloudinary URL for the new profile picture\r\n                    })\r\n                }).then(res => res.json())\r\n                .then(result => {\r\n                    console.log(result)\r\n                    // Update localStorage and global state with the new profile pic\r\n                    localStorage.setItem(\"user\", JSON.stringify({ ...state, pic: result.pic }))\r\n                    dispatch({ type: \"UPDATEPIC\", payload: result.pic })  // Dispatch to update user state\r\n                }).catch(err => {\r\n                    console.log(\"Error updating profile pic:\", err)\r\n                })\r\n            }).catch(err => {\r\n                console.log(\"Error uploading photo:\", err)\r\n            })\r\n        }\r\n    }, [image, dispatch, state])  // Adding dispatch and state to the dependencies\r\n\r\n    const updatePhoto = (file) => {\r\n        setImage(file)  // Update the image state when a new file is selected\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n            <div style={{ margin: \"18px 0px\", borderBottom: \"1px solid grey\" }}>\r\n\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-around\",\r\n                }}>\r\n                    <div>\r\n                        {/* Profile image */}\r\n                        <img\r\n                            style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }}\r\n                            src={state ? state.pic : \"loading\"}  // Display the user's profile pic or \"loading\" text\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h4>{state ? state.name : \"loading\"}</h4>\r\n                        <h5>{state ? state.email : \"loading\"}</h5>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                            <h6>{mypics.length} posts</h6>\r\n                            <h6>{state ? state.followers.length : \"0\"} followers</h6>\r\n                            <h6>{state ? state.following.length : \"0\"} following</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* File upload for updating profile picture */}\r\n                <div className=\"file-field input-field\" style={{ margin: \"10px\" }}>\r\n                    <div className=\"btn #64b5f6 blue darken-1\">\r\n                        <span>Update pic</span>\r\n                        <input type=\"file\" onChange={(e) => updatePhoto(e.target.files[0])} />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Gallery displaying user posts */}\r\n            <div className=\"gallery\">\r\n                {mypics.map(item => {\r\n                    return (\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}