{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kovia\\\\Desktop\\\\clone insta 2\\\\insta-clone\\\\client\\\\src\\\\components\\\\screens\\\\Newpassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport M from 'materialize-css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const {\n    token\n  } = useParams(); // Retrieve token from URL params\n\n  const validatePassword = password => {\n    // Example: password must be at least 6 characters long\n    return password.length >= 6;\n  };\n  const PostData = () => {\n    if (!validatePassword(password)) {\n      M.toast({\n        html: \"Password must be at least 6 characters long.\",\n        classes: \"#c62828 red darken-3\"\n      });\n      return;\n    }\n    fetch('/new-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password,\n        token\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#c62828 red darken-3\"\n        });\n      } else {\n        M.toast({\n          html: data.message,\n          classes: \"#43a047 green darken-1\"\n        });\n        navigate('/signin');\n      }\n    }).catch(err => {\n      console.error(err);\n      M.toast({\n        html: \"Something went wrong. Please try again.\",\n        classes: \"#c62828 red darken-3\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter a new password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn waves-effect waves-light #64b5f6 blue darken-1\",\n        onClick: PostData,\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPassword, \"VTTXHxNDDeDSCbwAod7B8alCEI0=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = NewPassword;\nexport default NewPassword;\nvar _c;\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","M","jsxDEV","_jsxDEV","NewPassword","_s","navigate","password","setPassword","token","validatePassword","length","PostData","toast","html","classes","fetch","method","headers","body","JSON","stringify","then","res","json","data","error","message","catch","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kovia/Desktop/clone insta 2/insta-clone/client/src/components/screens/Newpassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst NewPassword = () => {\r\n    const navigate = useNavigate();\r\n    const [password, setPassword] = useState('');\r\n    const { token } = useParams(); // Retrieve token from URL params\r\n\r\n    const validatePassword = (password) => {\r\n        // Example: password must be at least 6 characters long\r\n        return password.length >= 6;\r\n    };\r\n\r\n    const PostData = () => {\r\n        if (!validatePassword(password)) {\r\n            M.toast({ \r\n                html: \"Password must be at least 6 characters long.\", \r\n                classes: \"#c62828 red darken-3\" \r\n            });\r\n            return;\r\n        }\r\n\r\n        fetch('/new-password', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                token,\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    M.toast({ \r\n                        html: data.error, \r\n                        classes: \"#c62828 red darken-3\" \r\n                    });\r\n                } else {\r\n                    M.toast({ \r\n                        html: data.message, \r\n                        classes: \"#43a047 green darken-1\" \r\n                    });\r\n                    navigate('/signin');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                M.toast({ \r\n                    html: \"Something went wrong. Please try again.\", \r\n                    classes: \"#c62828 red darken-3\" \r\n                });\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Enter a new password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={PostData}\r\n                >\r\n                    Update Password\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}