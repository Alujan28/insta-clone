{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kovia\\\\Desktop\\\\clone insta 2\\\\insta-clone\\\\client\\\\src\\\\components\\\\screens\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport M from \"materialize-css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isValidEmail = email => /\\S+@\\S+\\.\\S+/.test(email);\n  const PostData = () => {\n    if (!email || !password) {\n      M.toast({\n        html: \"Please fill all fields\",\n        classes: \"red darken-1\"\n      });\n      return;\n    }\n    if (!isValidEmail(email)) {\n      M.toast({\n        html: \"Invalid email format\",\n        classes: \"red darken-1\"\n      });\n      return;\n    }\n    fetch(\"/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"red darken-1\"\n        });\n      } else {\n        localStorage.setItem(\"jwt\", data.token);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n        M.toast({\n          html: \"Login successful\",\n          classes: \"green darken-1\"\n        });\n        navigate(\"/\");\n      }\n    }).catch(err => {\n      console.error(\"Error:\", err);\n      M.toast({\n        html: \"Something went wrong\",\n        classes: \"red darken-1\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn waves-effect waves-light blue darken-1\",\n        onClick: PostData,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(SignIn, \"H+iueE6ppXbrBS3eFHdSUQUe0Ps=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","Link","useNavigate","M","jsxDEV","_jsxDEV","SignIn","_s","navigate","email","setEmail","password","setPassword","isValidEmail","test","PostData","toast","html","classes","fetch","method","headers","body","JSON","stringify","then","res","json","data","error","localStorage","setItem","token","user","catch","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/kovia/Desktop/clone insta 2/insta-clone/client/src/components/screens/SignIn.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nconst SignIn = () => {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const isValidEmail = (email) => /\\S+@\\S+\\.\\S+/.test(email);\r\n\r\n    const PostData = () => {\r\n        if (!email || !password) {\r\n            M.toast({ html: \"Please fill all fields\", classes: \"red darken-1\" });\r\n            return;\r\n        }\r\n        if (!isValidEmail(email)) {\r\n            M.toast({ html: \"Invalid email format\", classes: \"red darken-1\" });\r\n            return;\r\n        }\r\n\r\n        fetch(\"/signin\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ email, password }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"red darken-1\" });\r\n                } else {\r\n                    localStorage.setItem(\"jwt\", data.token);\r\n                    localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n                    M.toast({ html: \"Login successful\", classes: \"green darken-1\" });\r\n                    navigate(\"/\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error:\", err);\r\n                M.toast({ html: \"Something went wrong\", classes: \"red darken-1\" });\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button\r\n                    className=\"btn waves-effect waves-light blue darken-1\"\r\n                    onClick={PostData}\r\n                >\r\n                    Login\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signup\">Don't have an account?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}