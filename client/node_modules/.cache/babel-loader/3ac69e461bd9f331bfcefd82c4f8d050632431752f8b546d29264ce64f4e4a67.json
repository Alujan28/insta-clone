{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kovia\\\\Desktop\\\\clone insta 2\\\\insta-clone\\\\client\\\\src\\\\components\\\\screens\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reset = () => {\n  _s();\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\"); // State to hold the entered email\n\n  const PostData = () => {\n    // Email validation regex\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!emailRegex.test(email)) {\n      M.toast({\n        html: \"Invalid email address\",\n        classes: \"#c62828 red darken-3\"\n      });\n      return;\n    }\n\n    // Sending email to the backend for password reset request\n    fetch('/reset-password', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      }) // Sending email as part of the request body\n    }).then(res => res.json()) // Handling the JSON response\n    .then(data => {\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#c62828 red darken-3\"\n        });\n      } else {\n        M.toast({\n          html: data.message,\n          classes: \"#43a047 green darken-1\"\n        });\n        history.push('/signin'); // Redirecting to the sign-in page after successful password reset request\n      }\n    }).catch(err => {\n      console.log(err);\n      M.toast({\n        html: \"Something went wrong. Please try again later.\",\n        classes: \"#c62828 red darken-3\"\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value) // Handling input change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn waves-effect waves-light #64b5f6 blue darken-1\",\n        onClick: PostData // Calling PostData when the button is clicked\n        ,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Reset, \"sKpVsbGp6wATbIhhtUFB1HlAvsk=\", false, function () {\n  return [useHistory];\n});\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useState","useHistory","M","jsxDEV","_jsxDEV","Reset","_s","history","email","setEmail","PostData","emailRegex","test","toast","html","classes","fetch","method","headers","body","JSON","stringify","then","res","json","data","error","message","push","catch","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kovia/Desktop/clone insta 2/insta-clone/client/src/components/screens/Reset.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Reset = () => {\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")  // State to hold the entered email\r\n\r\n    const PostData = () => {\r\n        // Email validation regex\r\n        const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        if (!emailRegex.test(email)) {\r\n            M.toast({ html: \"Invalid email address\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n\r\n        // Sending email to the backend for password reset request\r\n        fetch('/reset-password', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ email })  // Sending email as part of the request body\r\n        })\r\n        .then(res => res.json())  // Handling the JSON response\r\n        .then(data => {\r\n            if (data.error) {\r\n                M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n            } else {\r\n                M.toast({ html: data.message, classes: \"#43a047 green darken-1\" })\r\n                history.push('/signin')  // Redirecting to the sign-in page after successful password reset request\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            M.toast({ html: \"Something went wrong. Please try again later.\", classes: \"#c62828 red darken-3\" })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}  // Handling input change\r\n                />\r\n                <button\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={PostData}  // Calling PostData when the button is clicked\r\n                >\r\n                    Reset Password\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}