{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kovia\\\\Desktop\\\\clone insta 2\\\\insta-clone\\\\client\\\\src\\\\components\\\\screens\\\\Reset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport M from 'materialize-css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reset = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n\n  // Helper function to display toast messages\n  const showToast = (message, classes) => {\n    M.toast({\n      html: message,\n      classes\n    });\n  };\n\n  // Email validation using a more reliable regex\n  const isValidEmail = email => {\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return regex.test(email);\n  };\n  const PostData = async () => {\n    if (!isValidEmail(email)) {\n      showToast(\"Invalid email\", \"#c62828 red darken-3\");\n      return;\n    }\n    try {\n      const res = await fetch('/reset-password', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (data.error) {\n        showToast(data.error, \"#c62828 red darken-3\");\n      } else {\n        showToast(data.message, \"#43a047 green darken-1\");\n        navigate('/signin');\n      }\n    } catch (err) {\n      console.error(\"Error during password reset:\", err);\n      showToast(\"Something went wrong, please try again later.\", \"#c62828 red darken-3\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn waves-effect waves-light #64b5f6 blue darken-1\",\n        onClick: PostData,\n        disabled: !email || !isValidEmail(email) // Disable if email is empty or invalid\n        ,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Reset, \"yGHs7W6rUk6h2xensv9vkiPLYlc=\", false, function () {\n  return [useNavigate];\n});\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useState","useNavigate","M","jsxDEV","_jsxDEV","Reset","_s","navigate","email","setEmail","showToast","message","classes","toast","html","isValidEmail","regex","test","PostData","res","fetch","method","headers","body","JSON","stringify","data","json","error","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kovia/Desktop/clone insta 2/insta-clone/client/src/components/screens/Reset.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst Reset = () => {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    // Helper function to display toast messages\r\n    const showToast = (message, classes) => {\r\n        M.toast({ html: message, classes });\r\n    };\r\n\r\n    // Email validation using a more reliable regex\r\n    const isValidEmail = (email) => {\r\n        const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n        return regex.test(email);\r\n    };\r\n\r\n    const PostData = async () => {\r\n        if (!isValidEmail(email)) {\r\n            showToast(\"Invalid email\", \"#c62828 red darken-3\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const res = await fetch('/reset-password', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ email }),\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (data.error) {\r\n                showToast(data.error, \"#c62828 red darken-3\");\r\n            } else {\r\n                showToast(data.message, \"#43a047 green darken-1\");\r\n                navigate('/signin');\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error during password reset:\", err);\r\n            showToast(\"Something went wrong, please try again later.\", \"#c62828 red darken-3\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <button\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={PostData}\r\n                    disabled={!email || !isValidEmail(email)} // Disable if email is empty or invalid\r\n                >\r\n                    Reset Password\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reset;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}