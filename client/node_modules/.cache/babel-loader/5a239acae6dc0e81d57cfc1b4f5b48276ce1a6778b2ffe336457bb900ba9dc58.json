{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kovia\\\\Desktop\\\\clone insta 2\\\\insta-clone\\\\client\\\\src\\\\components\\\\screens\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const postDetails = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"insta-clone\");\n    data.append(\"cloud_name\", \"dqkmnrjdr\");\n    fetch(\"https://api.cloudinary.com/v1_1/dqkmnrjdr/image/upload\", {\n      method: \"POST\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      const imageUrl = data.secure_url; // Cloudinary image URL\n\n      // Now send post data to your backend, including the image URL\n      fetch(\"/createpost\", {\n        // Your backend API endpoint\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          image: imageUrl\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(\"Post created:\", data);\n        // You can redirect the user or show a success message here\n      }).catch(err => {\n        console.error(\"Error creating post:\", err);\n      });\n    }).catch(err => {\n      console.error(\"Error uploading image:\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card input-field\",\n    style: {\n      margin: \"30px auto\",\n      maxWidth: \"500px\",\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Body\",\n      value: body,\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-field input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn #64b5f6 blue darken-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-path-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"file-path validate\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn waves-effect waves-light #64b5f6 blue darken-1\",\n      onClick: () => postDetails(),\n      children: \"Submit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePost, \"UQb2zUzo0IVqgXov0x3eBTB+NYo=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreatePost","_s","title","setTitle","body","setBody","image","setImage","postDetails","data","FormData","append","fetch","method","then","res","json","console","log","imageUrl","secure_url","headers","JSON","stringify","catch","err","error","className","style","margin","maxWidth","padding","textAlign","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kovia/Desktop/clone insta 2/insta-clone/client/src/components/screens/CreatePost.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst CreatePost = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const postDetails = () => {\r\n        const data = new FormData();\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\", \"insta-clone\");\r\n        data.append(\"cloud_name\", \"dqkmnrjdr\");\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/dqkmnrjdr/image/upload\", {\r\n            method: \"POST\",\r\n            body: data,\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                const imageUrl = data.secure_url; // Cloudinary image URL\r\n\r\n                // Now send post data to your backend, including the image URL\r\n                fetch(\"/createpost\", { // Your backend API endpoint\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        title,\r\n                        body,\r\n                        image: imageUrl,\r\n                    }),\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        console.log(\"Post created:\", data);\r\n                        // You can redirect the user or show a success message here\r\n                    })\r\n                    .catch((err) => {\r\n                        console.error(\"Error creating post:\", err);\r\n                    });\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error uploading image:\", err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"card input-field\"\r\n            style={{\r\n                margin: \"30px auto\",\r\n                maxWidth: \"500px\",\r\n                padding: \"20px\",\r\n                textAlign: \"center\",\r\n            }}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Body\"\r\n                value={body}\r\n                onChange={(e) => setBody(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button\r\n                className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={() => postDetails()}\r\n            >\r\n                Submit Post\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}